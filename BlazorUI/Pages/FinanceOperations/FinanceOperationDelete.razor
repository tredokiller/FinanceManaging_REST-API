@page "/finance-operations/delete/{id}"
@using Microsoft.AspNetCore.Components
@using Domain.Entities
@using System.Globalization
@inherits FinanceOperationsBase

<h3>Delete Finance Operation</h3>



<EditForm Model="@FinanceOperation"  OnValidSubmit="@Delete">
    <DataAnnotationsValidator />
    <div class="form-group">
             <label for="date">Category Id:</label>
             <InputSelect class="form-control" id="id" disabled="true" @bind-Value="FinanceOperation.CategoryId">
                 {
                    <option value="@FinanceOperation.CategoryId">@FinanceOperation.Category</option>
                 }
             </InputSelect>
         </div>
        <div class="form-group">
              <label for="amount">Amount:</label>
              <InputNumber class="form-control" id="amount"  disabled="true" @bind-Value="@FinanceOperation.Amount" />
              <ValidationMessage For="@(() => FinanceOperation.Amount)" />
          </div>
        <div class="form-group">
            <label for="date">Date:</label>
            <InputDate class="form-control" id="date" disabled="true" @bind-Value="@FinanceOperation.Date"></InputDate>
            <ValidationMessage For="@(() => FinanceOperation.Date)" />
        </div>
    <button type="submit" class="btn btn-primary" style="margin-top: 20px">Delete Operation</button>
    <button type="button" class="btn btn-primary" style="margin-top: 20px" @onclick="ToOperations">To Operations</button>
</EditForm>



@code {

    [Parameter]
    public string Id { get; set; }
    
    private int _intId;
    

    private FinanceOperation FinanceOperation { get; set; } = new FinanceOperation();

    protected override async Task OnParametersSetAsync()
    {
        if (int.TryParse(Id, out _intId))
        {
            FinanceOperation = await FinanceOperationsService.GetFinanceOperation(_intId);
        }
    }

    private async Task Delete()
    {
        await FinanceOperationsService.RemoveFinanceOperation(_intId);
        ToOperations();
    }
    
    

}