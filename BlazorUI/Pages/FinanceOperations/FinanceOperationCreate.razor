@page "/finance-operations/new"
@using Infrastructure.Models.Requests
@using Microsoft.AspNetCore.Components
@using Domain.Entities

@inherits FinanceOperationsBase


<h3>Create New Finance Operation</h3>


<EditForm Model="@FinanceOperationAddRequest" OnValidSubmit="@Create">
    <DataAnnotationsValidator/>
    <div class="form-group">
        <label for="date">Category:</label>
        <InputSelect class="form-control" id="id" @bind-Value="FinanceOperationAddRequest.CategoryId">
            <option value="">Select...</option>
            @foreach (var item in _incomeExpenseCategories)
            {
                <option value="@item.Id">@item.Name</option>
            }
        </InputSelect>
        <ValidationMessage For="@(() => FinanceOperationAddRequest.CategoryId)"/>
    </div>
    <div class="form-group">
        <label for="amount">Amount:</label>
        <InputNumber class="form-control" id="amount" @bind-Value="@FinanceOperationAddRequest.Amount"/>
        <ValidationMessage For="@(() => FinanceOperationAddRequest.Amount)"/>
    </div>
    <div class="form-group">
        <label for="date">Date:</label>
        <InputDate class="form-control" id="date" @bind-Value="@FinanceOperationAddRequest.Date"></InputDate>
        <ValidationMessage For="@(() => FinanceOperationAddRequest.Date)"/>
    </div>
    <button type="submit" class="btn btn-primary" style="margin-top: 20px">Create New Finance Operation</button>
    <button type="button" class="btn btn-primary" style="margin-top: 20px" @onclick="ToOperations">To Operations</button>
</EditForm>


@code {

    private FinanceOperationAddRequest FinanceOperationAddRequest { get; set; } = new FinanceOperationAddRequest();
    private IEnumerable<IncomeExpenseCategory> _incomeExpenseCategories = new List<IncomeExpenseCategory>();


    protected override async Task OnInitializedAsync()
    {
        _incomeExpenseCategories = await IncomeExpenseService.GetIncomeExpenseTypes();

        FinanceOperationAddRequest.Date = DateTime.Today;
    }


    private async Task Create()
    {
        await FinanceOperationsService.CreateFinanceOperation(FinanceOperationAddRequest);
        ToOperations();
    }

}